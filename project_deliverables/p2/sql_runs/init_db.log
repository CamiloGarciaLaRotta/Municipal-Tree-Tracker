DROP TYPE TREE_SPECIES, CIVIC_TYPE, TRANSACTION_STATUS,
  ASSESS_STATUS, USER_TYPE CASCADE;
NOTICE:  drop cascades to 6 other objects
DETAIL:  drop cascades to table users column u_type
drop cascades to table assessment column assess_status
drop cascades to table transactions column trans_status
drop cascades to table civic_location column civic_type
drop cascades to table tree column species
drop cascades to table transactions column tree_species
DROP TYPE
DROP TABLE CITY, CIVIC_LOCATION, MUNICIPALITY, PARK, TREE,
  TRANSACTIONS, USERS, WORKS_FOR, REVIEW, ORDERS, ASSESSMENT;
DROP TABLE
CREATE TYPE TREE_SPECIES AS ENUM (
  'ALDER', 'APPLE', 'ASH', 'ASPEN', 'BASSWOOD', 'BIRCH',
  'BUCKEYE', 'BUCKTHORN', 'CALIFORNIALAUREL', 'CATALPA',
  'CEDAR', 'CHERRY', 'CHESTNUT', 'CHINKAPIN', 'COTTONWOOD',
  'CYPRESS', 'DOGWOOD', 'DOUGLASFIR', 'ELM', 'FIR', 'FILBERT',
  'GIANTSEQUOIA', 'HAWTHORN', 'HAZEL', 'HEMLOCK', 'HONEYLOCUST',
  'HOLLY', 'HORSECHESTNUT', 'INCENSECEDAR', 'JUNIPER', 'LARCH',
  'LOCUST', 'MADRONE', 'MAPLE', 'MOUNTAINASH', 'MOUNTAINMAHOGANY',
  'OAK', 'OREGONMYRTLE', 'PEAR', 'PINE', 'PLUM', 'POPLAR',
  'REDCEDARARBORVITAE', 'REDWOOD', 'RUSSIANOLIVE', 'SPRUCE',
  'SWEETGUM', 'SYCAMORE', 'TANOAK', 'TRUECEDAR', 'TRUEFIR',
  'WALNUT', 'WHITECEDAR', 'WILLOW', 'YELLOWPOPLAR', 'YEW'
);
CREATE TYPE
CREATE TYPE CIVIC_TYPE AS ENUM (
  'RESIDENTIAL', 'INDUSTRIAL', 'COMERCIAL', 'FARM'
);
CREATE TYPE
CREATE TYPE TRANSACTION_STATUS AS ENUM (
  'PENDING', 'APPROVED', 'REFUSED'
);
CREATE TYPE
CREATE TYPE ASSESS_STATUS AS ENUM (
  'HEALTHY', 'TO_CUT', 'INFESTED', 'DAMAGED'
);
CREATE TYPE
CREATE TYPE USER_TYPE AS ENUM (
  'URBAN_PLANNER', 'ENV_SCIENTIST', 'RESIDENT'
);
CREATE TYPE
CREATE TABLE CITY (
  cid SERIAL,
  c_name VARCHAR(50) NOT NULL,
  c_polygon POLYGON NOT NULL,
  PRIMARY KEY (cid)
);
CREATE TABLE
CREATE TABLE CIVIC_LOCATION (
  civid SERIAL,
  civic_address VARCHAR(50) NOT NULL,
  civic_type CIVIC_TYPE NOT NULL,
  PRIMARY KEY (civid)
);
CREATE TABLE
CREATE TABLE MUNICIPALITY (
  mid SERIAL,
  m_name VARCHAR(50) NOT NULL,
  m_population INTEGER NOT NULL,
  m_polygon POLYGON NOT NULL,
  cid INTEGER NOT NULL,
  PRIMARY KEY (mid),
  CONSTRAINT positive_pop  CHECK(m_population > 0),
  CONSTRAINT municipality_cid_fkey FOREIGN KEY (cid)
    REFERENCES CITY (cid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL
);
CREATE TABLE
CREATE TABLE PARK (
  pid SERIAL,
  p_name VARCHAR(50) NOT NULL,
  p_polygon POLYGON NOT NULL,
  mid INTEGER NOT NULL,
  PRIMARY KEY (pid),
  CONSTRAINT park_mid_fkey FOREIGN KEY (mid)
    REFERENCES MUNICIPALITY (mid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL
);
CREATE TABLE
CREATE TABLE TREE (
  tid SERIAL,
  geog_loc POINT NOT NULL,
  planted_date DATE NOT NULL,
  species TREE_SPECIES NOT NULL,
  mid INTEGER NOT NULL,
  pid INTEGER,
  civid INTEGER,
  PRIMARY KEY (tid),
  CONSTRAINT tree_mid_fkey FOREIGN KEY (mid)
    REFERENCES MUNICIPALITY (mid) MATCH SIMPLE
    ON UPDATE RESTRICT
  ON DELETE SET NULL,
  CONSTRAINT tree_pid_fkey FOREIGN KEY (pid)
    REFERENCES PARK (pid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL,
  CONSTRAINT tree_civid_fkey FOREIGN KEY (civid)
    REFERENCES CIVIC_LOCATION (civid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL
);
CREATE TABLE
CREATE TABLE TRANSACTIONS (
  transid SERIAL,
  trans_status TRANSACTION_STATUS NOT NULL,
  tree_species TREE_SPECIES NOT NULL,
  civid INTEGER NOT NULL,
  PRIMARY KEY (transid),
  CONSTRAINT transaction_civid_fkey FOREIGN KEY (civid)
    REFERENCES CIVIC_LOCATION (civid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL
);
CREATE TABLE
CREATE TABLE USERS (
  uid SERIAL,
  u_type USER_TYPE NOT NULL,
  u_name VARCHAR(50) NOT NULL,
  u_email VARCHAR(50) UNIQUE NOT NULL,
  u_phone VARCHAR(50) NOT NULL,
  civid INTEGER NOT NULL,
  PRIMARY KEY (uid),
  CONSTRAINT user_civid_fkey FOREIGN KEY (civid)
    REFERENCES CIVIC_LOCATION (civid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL
);
CREATE TABLE
CREATE TABLE WORKS_FOR (
  start_date DATE NOT NULL,
  cid INTEGER,
  uid INTEGER,
  CONSTRAINT works_cid_fkey FOREIGN KEY (cid)
    REFERENCES CITY (cid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL,
  CONSTRAINT works_uid_fkey FOREIGN KEY (uid)
    REFERENCES USERS (uid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE RESTRICT
);
CREATE TABLE
CREATE TABLE REVIEW (
  transid INTEGER,
  uid INTEGER,
  CONSTRAINT review_transid_fkey FOREIGN KEY (transid)
    REFERENCES TRANSACTIONS (transid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE SET NULL,
  CONSTRAINT review_uid_fkey FOREIGN KEY (uid)
    REFERENCES USERS (uid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE RESTRICT
);
CREATE TABLE
CREATE TABLE ORDERS (
  transid INTEGER,
  uid INTEGER,
  CONSTRAINT order_transid_fkey FOREIGN KEY (transid)
    REFERENCES TRANSACTIONS (transid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE RESTRICT,
  CONSTRAINT order_uid_fkey FOREIGN KEY (uid)
    REFERENCES USERS (uid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE RESTRICT
);
CREATE TABLE
CREATE TABLE ASSESSMENT (
  assess_date DATE NOT NULL,
  assess_status ASSESS_STATUS NOT NULL,
  assess_action VARCHAR(50) NOT NULL,
  tid SERIAL NOT NULL,
  uid SERIAL NOT NULL,
  PRIMARY KEY (assess_date, tid, uid),
  CONSTRAINT assess_tid_fkey FOREIGN KEY (tid)
    REFERENCES TREE (tid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE RESTRICT,
  CONSTRAINT assess_uid_fkey FOREIGN KEY (uid)
    REFERENCES USERS (uid) MATCH SIMPLE
    ON UPDATE RESTRICT
    ON DELETE RESTRICT
);
CREATE TABLE
